import{isArray,isObject}from"is-what";var defaultConf={setter:"set",getter:"get",vuexEasyFirestore:!1,ignorePrivateProps:!0,pattern:"standard"};function getKeysFromPath(e){return e?e.match(/\w+/g):[]}function getDeepRef(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=getKeysFromPath(arguments[1]);if(!t.length)return e;for(var r=e;r&&t.length>1;)r=r[t.shift()];var a=t.shift();return r&&r.hasOwnProperty(a)?r[a]:void 0}function getDeepValue(e,t){return getDeepRef(e,t)}function setDeepValue(e,t,r){var a=getKeysFromPath(t),n=a.pop(),o=getDeepRef(e,a.join());return o&&o.hasOwnProperty(n)&&(o[n]=r),e}function popDeepValue(e,t){var r=getDeepRef(e,t);if(isArray(r))return r.pop()}function pushDeepValue(e,t,r){var a=getDeepRef(e,t);if(isArray(a))return a.push(r)}function spliceDeepValue(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,n=arguments[4],o=getDeepRef(e,t);if(isArray(o))return o.splice(r,a,n)}var _extends=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var a in r)Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a])}return e},toConsumableArray=function(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)};function makeMutationsForAllProps(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return r=Object.assign({},defaultConf,r),isObject(e)?Object.keys(e).reduce(function(a,n){if(r.ignorePrivateProps&&"_"===n[0])return a;var o=t?t+"."+n:n;a["simple"===r.pattern?o:"SET_"+o.toUpperCase()]=function(e,t){return setDeepValue(e,o,t)};var s=e[n];if(isObject(s)){var u=makeMutationsForAllProps(s,o,r);a=_extends({},a,u)}isArray(s)&&(a["simple"===r.pattern?o+".pop":"POP_"+o.toUpperCase()]=function(e){return popDeepValue(e,o)},a["simple"===r.pattern?o+".push":"PUSH_"+o.toUpperCase()]=function(e,t){return pushDeepValue(e,o,t)},a["simple"===r.pattern?o+".splice":"SPLICE_"+o.toUpperCase()]=function(e,t){return spliceDeepValue.apply(void 0,[e,o].concat(toConsumableArray(t)))});return a},{}):{}}function defaultMutations(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return makeMutationsForAllProps(e,null,t=Object.assign({},defaultConf,t))}function defaultGetter(e,t){return t.getters.hasOwnProperty(e)?t.getters[e]:getDeepValue(t.state,e)}function defaultSetter(e,t,r){var a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};a=Object.assign({},defaultConf,a);var n=e.split("/"),o=n.pop(),s=n.length?n.join("/")+"/":"",u=s+("simple"===a.pattern?o:"set"+o[0].toUpperCase()+o.substring(1));if(r._actions[u])return r.dispatch(u,t);if(a.vuexEasyFirestore){var i=r._modulesNamespaceMap[e+"/"],p=i?e+"/set":s+"set",c=i?t:{};if(i||(c[o]=t),r._actions[p])return r.dispatch(p,c)}var l="simple"===a.pattern?o:"SET_"+o.toUpperCase(),f=s+l;if(r._mutations[f])return r.commit(f,t);console.error("There is no mutation set for '"+f+"'.\n    Please add a mutation like so in the correct module:\n\n    mutations: {\n      '"+l+"': ({state}, payload) => {\n        state."+o+" = payload\n      }\n    }\n\n    You can also add mutations automatically with vuex-easy-access.\n    See the documentation here:\n      https://github.com/mesqueeb/VuexEasyAccess#2-automatically-generate-mutations-for-each-state-property")}function createSetterModule(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return a=Object.assign({},defaultConf,a),{actions:function e(n){var o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return Object.keys(n).reduce(function(s,u){if(a.ignorePrivateProps&&"_"===u[0])return s;if(r._modulesNamespaceMap[t+u+"/"])return s;var i=o?o+"."+u:u,p=t+i;s[i]=function(e,t){return defaultSetter(p,t,r,a)};var c=n[u];if(isObject(c)&&Object.keys(c).length){var l=e(c,i);Object.assign(s,l)}return s},{})}(e),namespaced:!0}}function generateSetterModules(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=e._modulesNamespaceMap;Object.keys(a).forEach(function(n){var o=a[n],s=getKeysFromPath(n+t),u=createSetterModule(o.state,n,e,r);e.registerModule(s,u)}),r=Object.assign({},defaultConf,r);var n=t,o=createSetterModule(e.state,"",e,r);e.registerModule(n,o)}function createEasyAccess(e){var t=Object.assign({},defaultConf,e);return function(e){generateSetterModules(e,t.setter,t),e[t.setter]=function(r,a){return defaultSetter(r,a,e,t)},e[t.getter]=function(t){return defaultGetter(t,e)}}}export default createEasyAccess;export{createEasyAccess,defaultMutations,defaultSetter,defaultGetter,getDeepRef,getKeysFromPath};
//# sourceMappingURL=index.es.min.js.map
